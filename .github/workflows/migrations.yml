name: migrations
on: pull_request
# Concurrency control (no changes here)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# Defaults (no changes here)
defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail -ux {0}

jobs:
  did-migration-change:
    name: check if any migration changes
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    # Map a step output to a job output
    outputs:
      added: ${{ steps.changes.outputs.migrations_added }}
      modified: ${{ steps.changes.outputs.migrations_modified }}
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Match migration files
        uses: dorny/paths-filter@0bc4621a3135347011ad047f9ecf449bf72ce2bd # v3.0.0
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  sql:
    name: Generate and Validate SQL
    runs-on: ubuntu-22.04
    timeout-minutes: 8
    needs: did-migration-change
    if: needs.did-migration-change.outputs.added == 'true'

    services:
      postgres:
        # Use a specific, stable Postgres version for consistency
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main    # Check out main branch to apply all merged migrations

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt

      - name: Apply Migrations
        run: |
          export CELERY_BROKER_URL=redis://localhost:6379/0
          export DATABASE_URL=postgres://postgres:password@localhost:5432/mydatabase
          python manage.py ci_migrate

      - uses: actions/checkout@v4
        with:
          clean: false

      - name: Get changed migration files
        id: file
        run: |
          echo 'added<<EOF' >> "$GITHUB_OUTPUT"
          git diff --diff-filter=A --name-only origin/main HEAD -- 'aura/**/migrations/*' >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"

      - name: Generate SQL for migration
        uses: getsentry/action-migrations@v1.0.7
        env:
          SENTRY_LOG_LEVEL: ERROR
          PGPASSWORD: password
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          migration: ${{ steps.file.outputs.added }}
