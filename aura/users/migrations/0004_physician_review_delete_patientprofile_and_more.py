# Generated by Django 5.0.6 on 2024-07-26 23:19

from decimal import Decimal

import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins
import model_utils.fields
import taggit.managers
from django.conf import settings
from django.db import migrations, models

import aura.users.fields


class Migration(migrations.Migration):
    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        ("users", "0003_coach_patient_profile_therapist_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Physician",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "avatar_url",
                    models.CharField(max_length=120, verbose_name="avatar url"),
                ),
                ("bio", models.TextField(blank=True, verbose_name="Biography")),
                ("date_of_birth", models.DateField(null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("m", " Male"), ("f", "Female")], max_length=1
                    ),
                ),
                ("license_number", models.CharField(max_length=50)),
                ("specialties", models.CharField(max_length=255)),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Years of Experience"
                    ),
                ),
                (
                    "availability",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Availability Schedule"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Physicians",
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("gps", "Google Play Store"),
                            ("aas", "Apple App Store"),
                            ("web", "Web"),
                            ("email", "Email"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        choices=[
                            ("therapy", "Therapy"),
                            ("psychiatry", "Psychiatry"),
                            ("coaching", "Coaching"),
                            ("mental_health", "Mental Health"),
                            ("wellness", "Wellness"),
                        ],
                        max_length=100,
                    ),
                ),
                ("rating", models.PositiveIntegerField()),
                ("review", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.DeleteModel(
            name="Profile",
        ),
        migrations.DeleteModel(
            name="TherapistProfile",
        ),
        migrations.DeleteModel(
            name="UserProfile",
        ),
        migrations.AddField(
            model_name="coach",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="coach",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="coach",
            name="user",
            field=aura.users.fields.AutoOneToOneField(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_profile",
                to=settings.AUTH_USER_MODEL,
                null=True,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="patient",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="patient",
            name="user",
            field=aura.users.fields.AutoOneToOneField(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_profile",
                to=settings.AUTH_USER_MODEL,
                null=True,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="therapist",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="therapist",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="therapist",
            name="user",
            field=aura.users.fields.AutoOneToOneField(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_profile",
                to=settings.AUTH_USER_MODEL,
                null=True,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="coach",
            name="date_of_birth",
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name="coach",
            name="rating",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0"),
                max_digits=3,
                verbose_name="Rating",
            ),
        ),
        migrations.AlterField(
            model_name="patient",
            name="date_of_birth",
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name="patient",
            name="emergency_contact_phone",
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name="patient",
            name="insurance_policy_number",
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name="patient",
            name="medical_record_number",
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name="therapist",
            name="date_of_birth",
            field=models.DateField(null=True),
        ),
        migrations.RemoveField(
            model_name="therapist",
            name="specialties",
        ),
        migrations.AlterField(
            model_name="therapist",
            name="years_of_experience",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Years of Experience"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(
                max_length=100, unique=True, verbose_name="email address"
            ),
        ),
        migrations.AlterOrderWithRespectTo(
            name="coach",
            order_with_respect_to="rating",
        ),
        migrations.AddField(
            model_name="physician",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AddField(
            model_name="physician",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated_by",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Modified By",
            ),
        ),
        migrations.AddField(
            model_name="physician",
            name="user",
            field=aura.users.fields.AutoOneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="therapist",
            name="specialties",
            field=taggit.managers.TaggableManager(
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
    ]
